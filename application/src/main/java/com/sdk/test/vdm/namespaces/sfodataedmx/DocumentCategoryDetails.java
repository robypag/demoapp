
/*
 * Generated by OData VDM code generator of SAP Cloud SDK in version 3.15.1
 */

package com.sdk.test.vdm.namespaces.sfodataedmx;

import java.util.Map;
import javax.annotation.Nonnull;
import javax.annotation.Nullable;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.collect.Maps;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.sap.cloud.sdk.datamodel.odata.helper.VdmComplex;
import com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.ODataField;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.NoArgsConstructor;
import lombok.ToString;


/**
 * <p>Original complex type name from the Odata EDM: <b>DocumentCategoryDetails</b></p>
 * 
 */
@Builder
@Data
@NoArgsConstructor
@AllArgsConstructor
@ToString(doNotUseGetters = true, callSuper = true)
@EqualsAndHashCode(doNotUseGetters = true, callSuper = true)
@JsonAdapter(com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.ODataVdmEntityAdapterFactory.class)
public class DocumentCategoryDetails
    extends VdmComplex<DocumentCategoryDetails>
{

    /**
     * Constraints: Nullable<p>Original property from the Odata EDM: <b>active</b></p>
     * 
     * @param active
     *     
     */
    @SerializedName("active")
    @JsonProperty("active")
    @Nullable
    @JsonAdapter(com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.ODataBooleanAdapter.class)
    @ODataField(odataName = "active")
    private Boolean active;
    /**
     * Constraints: Nullable<p>Original property from the Odata EDM: <b>categoryCode</b></p>
     * 
     * @param categoryCode
     *     
     */
    @SerializedName("categoryCode")
    @JsonProperty("categoryCode")
    @Nullable
    @ODataField(odataName = "categoryCode")
    private String categoryCode;
    /**
     * Constraints: Nullable<p>Original property from the Odata EDM: <b>categoryName</b></p>
     * 
     * @param categoryName
     *     
     */
    @SerializedName("categoryName")
    @JsonProperty("categoryName")
    @Nullable
    @ODataField(odataName = "categoryName")
    private String categoryName;
    /**
     * Constraints: Nullable<p>Original property from the Odata EDM: <b>entityName</b></p>
     * 
     * @param entityName
     *     
     */
    @SerializedName("entityName")
    @JsonProperty("entityName")
    @Nullable
    @ODataField(odataName = "entityName")
    private String entityName;
    /**
     * Constraints: Nullable<p>Original property from the Odata EDM: <b>entityTypeCode</b></p>
     * 
     * @param entityTypeCode
     *     
     */
    @SerializedName("entityTypeCode")
    @JsonProperty("entityTypeCode")
    @Nullable
    @ODataField(odataName = "entityTypeCode")
    private String entityTypeCode;
    /**
     * Constraints: Nullable<p>Original property from the Odata EDM: <b>systemDefined</b></p>
     * 
     * @param systemDefined
     *     
     */
    @SerializedName("systemDefined")
    @JsonProperty("systemDefined")
    @Nullable
    @JsonAdapter(com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.ODataBooleanAdapter.class)
    @ODataField(odataName = "systemDefined")
    private Boolean systemDefined;

    /**
     * {@inheritDoc}
     * 
     */
    @Nonnull
    @Override
    public Class<DocumentCategoryDetails> getType() {
        return DocumentCategoryDetails.class;
    }

    @Nonnull
    @Override
    protected Map<String, Object> toMapOfFields() {
        final Map<String, Object> values = super.toMapOfFields();
        values.put("active", getActive());
        values.put("categoryCode", getCategoryCode());
        values.put("categoryName", getCategoryName());
        values.put("entityName", getEntityName());
        values.put("entityTypeCode", getEntityTypeCode());
        values.put("systemDefined", getSystemDefined());
        return values;
    }

    @Override
    protected void fromMap(final Map<String, Object> inputValues) {
        final Map<String, Object> values = Maps.newHashMap(inputValues);
        // simple properties
        {
            if (values.containsKey("active")) {
                final Object value = values.remove("active");
                if ((value == null)||(!value.equals(getActive()))) {
                    setActive(((Boolean) value));
                }
            }
            if (values.containsKey("categoryCode")) {
                final Object value = values.remove("categoryCode");
                if ((value == null)||(!value.equals(getCategoryCode()))) {
                    setCategoryCode(((String) value));
                }
            }
            if (values.containsKey("categoryName")) {
                final Object value = values.remove("categoryName");
                if ((value == null)||(!value.equals(getCategoryName()))) {
                    setCategoryName(((String) value));
                }
            }
            if (values.containsKey("entityName")) {
                final Object value = values.remove("entityName");
                if ((value == null)||(!value.equals(getEntityName()))) {
                    setEntityName(((String) value));
                }
            }
            if (values.containsKey("entityTypeCode")) {
                final Object value = values.remove("entityTypeCode");
                if ((value == null)||(!value.equals(getEntityTypeCode()))) {
                    setEntityTypeCode(((String) value));
                }
            }
            if (values.containsKey("systemDefined")) {
                final Object value = values.remove("systemDefined");
                if ((value == null)||(!value.equals(getSystemDefined()))) {
                    setSystemDefined(((Boolean) value));
                }
            }
        }
        // structured properties
        {
        }
        // navigation properties
        {
        }
        super.fromMap(values);
    }

    @Nonnull
    @Override
    protected Map<String, Object> getKey() {
        final Map<String, Object> result = Maps.newHashMap();
        return result;
    }

}
