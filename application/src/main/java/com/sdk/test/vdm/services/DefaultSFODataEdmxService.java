
/*
 * Generated by OData VDM code generator of SAP Cloud SDK in version 3.15.1
 */

package com.sdk.test.vdm.services;

import javax.annotation.Nonnull;
import javax.inject.Named;
import com.sdk.test.vdm.namespaces.sfodataedmx.AddModifierToJobReqFluentHelper;
import com.sdk.test.vdm.namespaces.sfodataedmx.ApproveOfferFluentHelper;
import com.sdk.test.vdm.namespaces.sfodataedmx.ApproveOrDeclineJobReqFormFluentHelper;
import com.sdk.test.vdm.namespaces.sfodataedmx.ApproveWfRequestFluentHelper;
import com.sdk.test.vdm.namespaces.sfodataedmx.Background_CaricaPubblica;
import com.sdk.test.vdm.namespaces.sfodataedmx.Background_CaricaPubblicaByKeyFluentHelper;
import com.sdk.test.vdm.namespaces.sfodataedmx.Background_CaricaPubblicaCreateFluentHelper;
import com.sdk.test.vdm.namespaces.sfodataedmx.Background_CaricaPubblicaDeleteFluentHelper;
import com.sdk.test.vdm.namespaces.sfodataedmx.Background_CaricaPubblicaFluentHelper;
import com.sdk.test.vdm.namespaces.sfodataedmx.Background_CaricaPubblicaUpdateFluentHelper;
import com.sdk.test.vdm.namespaces.sfodataedmx.CheckUserPermissionFluentHelper;
import com.sdk.test.vdm.namespaces.sfodataedmx.CheckUserPermissionsFluentHelper;
import com.sdk.test.vdm.namespaces.sfodataedmx.CommentWfRequestFluentHelper;
import com.sdk.test.vdm.namespaces.sfodataedmx.ConvertAssignmentIdExternalFluentHelper;
import com.sdk.test.vdm.namespaces.sfodataedmx.CreatePerformanceReviewFormFluentHelper;
import com.sdk.test.vdm.namespaces.sfodataedmx.DeclineOfferFluentHelper;
import com.sdk.test.vdm.namespaces.sfodataedmx.FwdCandidateToColleagueFluentHelper;
import com.sdk.test.vdm.namespaces.sfodataedmx.GenerateNextPersonIDFluentHelper;
import com.sdk.test.vdm.namespaces.sfodataedmx.GetBizXActionFluentHelper;
import com.sdk.test.vdm.namespaces.sfodataedmx.GetDefaultDevGoalPlanTemplateIdFluentHelper;
import com.sdk.test.vdm.namespaces.sfodataedmx.GetDefaultGoalPlanTemplateIdFluentHelper;
import com.sdk.test.vdm.namespaces.sfodataedmx.GetDocumentCategoriesFluentHelper;
import com.sdk.test.vdm.namespaces.sfodataedmx.GetDynamicGroupsByUserFluentHelper;
import com.sdk.test.vdm.namespaces.sfodataedmx.GetEligibleSpotAwardsProgramCodesFluentHelper;
import com.sdk.test.vdm.namespaces.sfodataedmx.GetExtEventMetaDataDefinitionFluentHelper;
import com.sdk.test.vdm.namespaces.sfodataedmx.GetMatchedGuideLineRuleInfoFluentHelper;
import com.sdk.test.vdm.namespaces.sfodataedmx.GetNewEmploymentEnabledForContingentWorkforceFluentHelper;
import com.sdk.test.vdm.namespaces.sfodataedmx.GetOfferLetterTemplateFluentHelper;
import com.sdk.test.vdm.namespaces.sfodataedmx.GetPasswordPolicyFluentHelper;
import com.sdk.test.vdm.namespaces.sfodataedmx.GetPeopleProfileHeaderFluentHelper;
import com.sdk.test.vdm.namespaces.sfodataedmx.GetPermissionMetadataFluentHelper;
import com.sdk.test.vdm.namespaces.sfodataedmx.GetPositionObjectDataFluentHelper;
import com.sdk.test.vdm.namespaces.sfodataedmx.GetRecruitingTemplateFluentHelper;
import com.sdk.test.vdm.namespaces.sfodataedmx.GetRolesPermissionsFluentHelper;
import com.sdk.test.vdm.namespaces.sfodataedmx.GetUserNameFormatFluentHelper;
import com.sdk.test.vdm.namespaces.sfodataedmx.GetUserRolesReportFluentHelper;
import com.sdk.test.vdm.namespaces.sfodataedmx.GetUsersByDynamicGroupFluentHelper;
import com.sdk.test.vdm.namespaces.sfodataedmx.GetUsersPermissionsFluentHelper;
import com.sdk.test.vdm.namespaces.sfodataedmx.GetWorkflowPendingDataFluentHelper;
import com.sdk.test.vdm.namespaces.sfodataedmx.InitiateOnboardingFluentHelper;
import com.sdk.test.vdm.namespaces.sfodataedmx.InitiateOnboardingForUserFluentHelper;
import com.sdk.test.vdm.namespaces.sfodataedmx.InviteToApplyFluentHelper;
import com.sdk.test.vdm.namespaces.sfodataedmx.IsUserEligibleForSpotAwardProgramFluentHelper;
import com.sdk.test.vdm.namespaces.sfodataedmx.IsValidSessionFluentHelper;
import com.sdk.test.vdm.namespaces.sfodataedmx.LogoutFluentHelper;
import com.sdk.test.vdm.namespaces.sfodataedmx.PicklistLabel;
import com.sdk.test.vdm.namespaces.sfodataedmx.PicklistLabelByKeyFluentHelper;
import com.sdk.test.vdm.namespaces.sfodataedmx.PicklistLabelCreateFluentHelper;
import com.sdk.test.vdm.namespaces.sfodataedmx.PicklistLabelDeleteFluentHelper;
import com.sdk.test.vdm.namespaces.sfodataedmx.PicklistLabelFluentHelper;
import com.sdk.test.vdm.namespaces.sfodataedmx.PicklistLabelUpdateFluentHelper;
import com.sdk.test.vdm.namespaces.sfodataedmx.PicklistOption;
import com.sdk.test.vdm.namespaces.sfodataedmx.PicklistOptionByKeyFluentHelper;
import com.sdk.test.vdm.namespaces.sfodataedmx.PicklistOptionCreateFluentHelper;
import com.sdk.test.vdm.namespaces.sfodataedmx.PicklistOptionDeleteFluentHelper;
import com.sdk.test.vdm.namespaces.sfodataedmx.PicklistOptionFluentHelper;
import com.sdk.test.vdm.namespaces.sfodataedmx.PicklistOptionUpdateFluentHelper;
import com.sdk.test.vdm.namespaces.sfodataedmx.ReassignJobReqFluentHelper;
import com.sdk.test.vdm.namespaces.sfodataedmx.RefreshInterviewAssessmentsFluentHelper;
import com.sdk.test.vdm.namespaces.sfodataedmx.RefreshMetadataFluentHelper;
import com.sdk.test.vdm.namespaces.sfodataedmx.RejectFormFluentHelper;
import com.sdk.test.vdm.namespaces.sfodataedmx.RejectWfRequestFluentHelper;
import com.sdk.test.vdm.namespaces.sfodataedmx.SendEmailToInterviewersFluentHelper;
import com.sdk.test.vdm.namespaces.sfodataedmx.SendJobReqFormToUserFluentHelper;
import com.sdk.test.vdm.namespaces.sfodataedmx.SendJobReqToNextStepFluentHelper;
import com.sdk.test.vdm.namespaces.sfodataedmx.SendJobReqToPreviousStepFluentHelper;
import com.sdk.test.vdm.namespaces.sfodataedmx.SendMailOfferLetterFluentHelper;
import com.sdk.test.vdm.namespaces.sfodataedmx.SendOfferForApprovalFluentHelper;
import com.sdk.test.vdm.namespaces.sfodataedmx.SendToNextStepFluentHelper;
import com.sdk.test.vdm.namespaces.sfodataedmx.SendToPreviousStepFluentHelper;
import com.sdk.test.vdm.namespaces.sfodataedmx.SendbackWfRequestFluentHelper;
import com.sdk.test.vdm.namespaces.sfodataedmx.SetSmsNotificationPreferenceFluentHelper;
import com.sdk.test.vdm.namespaces.sfodataedmx.SignFormFluentHelper;
import com.sdk.test.vdm.namespaces.sfodataedmx.UpdateStaticGroupFluentHelper;
import com.sdk.test.vdm.namespaces.sfodataedmx.User;
import com.sdk.test.vdm.namespaces.sfodataedmx.UserByKeyFluentHelper;
import com.sdk.test.vdm.namespaces.sfodataedmx.UserCreateFluentHelper;
import com.sdk.test.vdm.namespaces.sfodataedmx.UserDeleteFluentHelper;
import com.sdk.test.vdm.namespaces.sfodataedmx.UserFluentHelper;
import com.sdk.test.vdm.namespaces.sfodataedmx.UserUpdateFluentHelper;
import com.sdk.test.vdm.namespaces.sfodataedmx.WithdrawWfRequestFluentHelper;
import com.sdk.test.vdm.namespaces.sfodataedmx.batch.DefaultSFODataEdmxServiceBatch;


/**
 * <h3>Details:</h3><table summary='Details'><tr><td align='right'>OData Service:</td><td>SFOData.edmx</td></tr></table>
 * 
 */
@Named("com.sdk.test.vdm.services.DefaultSFODataEdmxService")
public class DefaultSFODataEdmxService
    implements SFODataEdmxService
{

    @Nonnull
    private final String servicePath;

    /**
     * Creates a service using {@link SFODataEdmxService#DEFAULT_SERVICE_PATH} to send the requests.
     * 
     */
    public DefaultSFODataEdmxService() {
        servicePath = SFODataEdmxService.DEFAULT_SERVICE_PATH;
    }

    /**
     * Creates a service using the provided service path to send the requests.
     * <p>
     * Used by the fluent {@link #withServicePath(String)} method.
     * 
     */
    private DefaultSFODataEdmxService(
        @Nonnull
        final String servicePath) {
        this.servicePath = servicePath;
    }

    @Override
    @Nonnull
    public DefaultSFODataEdmxService withServicePath(
        @Nonnull
        final String servicePath) {
        return new DefaultSFODataEdmxService(servicePath);
    }

    /**
     * {@inheritDoc}
     * 
     */
    @Override
    @Nonnull
    public DefaultSFODataEdmxServiceBatch batch() {
        return new DefaultSFODataEdmxServiceBatch(this);
    }

    @Override
    @Nonnull
    public Background_CaricaPubblicaFluentHelper getAllBackground_CaricaPubblica() {
        return new Background_CaricaPubblicaFluentHelper(servicePath);
    }

    @Override
    @Nonnull
    public Background_CaricaPubblicaByKeyFluentHelper getBackground_CaricaPubblicaByKey(final Long backgroundElementId, final String userId) {
        return new Background_CaricaPubblicaByKeyFluentHelper(servicePath, backgroundElementId, userId);
    }

    @Override
    @Nonnull
    public Background_CaricaPubblicaCreateFluentHelper createBackground_CaricaPubblica(
        @Nonnull
        final Background_CaricaPubblica background_CaricaPubblica) {
        return new Background_CaricaPubblicaCreateFluentHelper(servicePath, background_CaricaPubblica);
    }

    @Override
    @Nonnull
    public Background_CaricaPubblicaUpdateFluentHelper updateBackground_CaricaPubblica(
        @Nonnull
        final Background_CaricaPubblica background_CaricaPubblica) {
        return new Background_CaricaPubblicaUpdateFluentHelper(servicePath, background_CaricaPubblica);
    }

    @Override
    @Nonnull
    public Background_CaricaPubblicaDeleteFluentHelper deleteBackground_CaricaPubblica(
        @Nonnull
        final Background_CaricaPubblica background_CaricaPubblica) {
        return new Background_CaricaPubblicaDeleteFluentHelper(servicePath, background_CaricaPubblica);
    }

    @Override
    @Nonnull
    public UserFluentHelper getAllUser() {
        return new UserFluentHelper(servicePath);
    }

    @Override
    @Nonnull
    public UserByKeyFluentHelper getUserByKey(final String userId) {
        return new UserByKeyFluentHelper(servicePath, userId);
    }

    @Override
    @Nonnull
    public UserCreateFluentHelper createUser(
        @Nonnull
        final User user) {
        return new UserCreateFluentHelper(servicePath, user);
    }

    @Override
    @Nonnull
    public UserUpdateFluentHelper updateUser(
        @Nonnull
        final User user) {
        return new UserUpdateFluentHelper(servicePath, user);
    }

    @Override
    @Nonnull
    public UserDeleteFluentHelper deleteUser(
        @Nonnull
        final User user) {
        return new UserDeleteFluentHelper(servicePath, user);
    }

    @Override
    @Nonnull
    public PicklistOptionFluentHelper getAllPicklistOption() {
        return new PicklistOptionFluentHelper(servicePath);
    }

    @Override
    @Nonnull
    public PicklistOptionByKeyFluentHelper getPicklistOptionByKey(final Long id) {
        return new PicklistOptionByKeyFluentHelper(servicePath, id);
    }

    @Override
    @Nonnull
    public PicklistOptionCreateFluentHelper createPicklistOption(
        @Nonnull
        final PicklistOption picklistOption) {
        return new PicklistOptionCreateFluentHelper(servicePath, picklistOption);
    }

    @Override
    @Nonnull
    public PicklistOptionUpdateFluentHelper updatePicklistOption(
        @Nonnull
        final PicklistOption picklistOption) {
        return new PicklistOptionUpdateFluentHelper(servicePath, picklistOption);
    }

    @Override
    @Nonnull
    public PicklistOptionDeleteFluentHelper deletePicklistOption(
        @Nonnull
        final PicklistOption picklistOption) {
        return new PicklistOptionDeleteFluentHelper(servicePath, picklistOption);
    }

    @Override
    @Nonnull
    public PicklistLabelFluentHelper getAllPicklistLabel() {
        return new PicklistLabelFluentHelper(servicePath);
    }

    @Override
    @Nonnull
    public PicklistLabelByKeyFluentHelper getPicklistLabelByKey(final String locale, final Long optionId) {
        return new PicklistLabelByKeyFluentHelper(servicePath, locale, optionId);
    }

    @Override
    @Nonnull
    public PicklistLabelCreateFluentHelper createPicklistLabel(
        @Nonnull
        final PicklistLabel picklistLabel) {
        return new PicklistLabelCreateFluentHelper(servicePath, picklistLabel);
    }

    @Override
    @Nonnull
    public PicklistLabelUpdateFluentHelper updatePicklistLabel(
        @Nonnull
        final PicklistLabel picklistLabel) {
        return new PicklistLabelUpdateFluentHelper(servicePath, picklistLabel);
    }

    @Override
    @Nonnull
    public PicklistLabelDeleteFluentHelper deletePicklistLabel(
        @Nonnull
        final PicklistLabel picklistLabel) {
        return new PicklistLabelDeleteFluentHelper(servicePath, picklistLabel);
    }

    @Override
    @Nonnull
    public RefreshMetadataFluentHelper refreshMetadata() {
        return new RefreshMetadataFluentHelper(servicePath);
    }

    @Override
    @Nonnull
    public GetMatchedGuideLineRuleInfoFluentHelper getMatchedGuideLineRuleInfo(final String programId, final String userIds, final String category, final String level) {
        return new GetMatchedGuideLineRuleInfoFluentHelper(servicePath, programId, userIds, category, level);
    }

    @Override
    @Nonnull
    public IsUserEligibleForSpotAwardProgramFluentHelper isUserEligibleForSpotAwardProgram(final String programId, final String userId) {
        return new IsUserEligibleForSpotAwardProgramFluentHelper(servicePath, programId, userId);
    }

    @Override
    @Nonnull
    public GetEligibleSpotAwardsProgramCodesFluentHelper getEligibleSpotAwardsProgramCodes(final String userId) {
        return new GetEligibleSpotAwardsProgramCodesFluentHelper(servicePath, userId);
    }

    @Override
    @Nonnull
    public LogoutFluentHelper logout() {
        return new LogoutFluentHelper(servicePath);
    }

    @Override
    @Nonnull
    public IsValidSessionFluentHelper isValidSession() {
        return new IsValidSessionFluentHelper(servicePath);
    }

    @Override
    @Nonnull
    public CheckUserPermissionFluentHelper checkUserPermission(final String accessUserId, final String permType, final String permStringValue, final Long permLongValue, final String targetUserId, final Boolean includeInactiveUser, final Boolean includeTBHUser) {
        return new CheckUserPermissionFluentHelper(servicePath, accessUserId, permType, permStringValue, permLongValue, targetUserId, includeInactiveUser, includeTBHUser);
    }

    @Override
    @Nonnull
    public UpdateStaticGroupFluentHelper updateStaticGroup(final Long groupId, final String action, final String userIds) {
        return new UpdateStaticGroupFluentHelper(servicePath, groupId, action, userIds);
    }

    @Override
    @Nonnull
    public GetDynamicGroupsByUserFluentHelper getDynamicGroupsByUser(final String userId, final String groupSubType) {
        return new GetDynamicGroupsByUserFluentHelper(servicePath, userId, groupSubType);
    }

    @Override
    @Nonnull
    public GetUsersByDynamicGroupFluentHelper getUsersByDynamicGroup(final Long groupId, final Boolean activeOnly) {
        return new GetUsersByDynamicGroupFluentHelper(servicePath, groupId, activeOnly);
    }

    @Override
    @Nonnull
    public GetUserRolesReportFluentHelper getUserRolesReport(final String userIds) {
        return new GetUserRolesReportFluentHelper(servicePath, userIds);
    }

    @Override
    @Nonnull
    public GetPermissionMetadataFluentHelper getPermissionMetadata(final String locale) {
        return new GetPermissionMetadataFluentHelper(servicePath, locale);
    }

    @Override
    @Nonnull
    public GetUsersPermissionsFluentHelper getUsersPermissions(final String userIds, final String locale) {
        return new GetUsersPermissionsFluentHelper(servicePath, userIds, locale);
    }

    @Override
    @Nonnull
    public GetRolesPermissionsFluentHelper getRolesPermissions(final String roleIds, final String locale) {
        return new GetRolesPermissionsFluentHelper(servicePath, roleIds, locale);
    }

    @Override
    @Nonnull
    public CheckUserPermissionsFluentHelper checkUserPermissions() {
        return new CheckUserPermissionsFluentHelper(servicePath);
    }

    @Override
    @Nonnull
    public GetUserNameFormatFluentHelper getUserNameFormat(final String locale) {
        return new GetUserNameFormatFluentHelper(servicePath, locale);
    }

    @Override
    @Nonnull
    public GetPasswordPolicyFluentHelper getPasswordPolicy(final String locale) {
        return new GetPasswordPolicyFluentHelper(servicePath, locale);
    }

    @Override
    @Nonnull
    public ConvertAssignmentIdExternalFluentHelper convertAssignmentIdExternal(final String oldAssignmentIdExternal, final String newAssignmentIdExternal) {
        return new ConvertAssignmentIdExternalFluentHelper(servicePath, oldAssignmentIdExternal, newAssignmentIdExternal);
    }

    @Override
    @Nonnull
    public GetDocumentCategoriesFluentHelper getDocumentCategories(final String entityType, final Boolean excludeInactive, final Boolean enforcePerm) {
        return new GetDocumentCategoriesFluentHelper(servicePath, entityType, excludeInactive, enforcePerm);
    }

    @Override
    @Nonnull
    public GetBizXActionFluentHelper getBizXAction(final String actionSourceId, final String userId) {
        return new GetBizXActionFluentHelper(servicePath, actionSourceId, userId);
    }

    @Override
    @Nonnull
    public GenerateNextPersonIDFluentHelper generateNextPersonID() {
        return new GenerateNextPersonIDFluentHelper(servicePath);
    }

    @Override
    @Nonnull
    public ApproveWfRequestFluentHelper approveWfRequest(final Long wfRequestId, final String comment) {
        return new ApproveWfRequestFluentHelper(servicePath, wfRequestId, comment);
    }

    @Override
    @Nonnull
    public CommentWfRequestFluentHelper commentWfRequest(final Long wfRequestId, final String comment) {
        return new CommentWfRequestFluentHelper(servicePath, wfRequestId, comment);
    }

    @Override
    @Nonnull
    public RejectWfRequestFluentHelper rejectWfRequest(final Long wfRequestId, final String comment) {
        return new RejectWfRequestFluentHelper(servicePath, wfRequestId, comment);
    }

    @Override
    @Nonnull
    public SendbackWfRequestFluentHelper sendbackWfRequest(final Long wfRequestId, final String comment) {
        return new SendbackWfRequestFluentHelper(servicePath, wfRequestId, comment);
    }

    @Override
    @Nonnull
    public WithdrawWfRequestFluentHelper withdrawWfRequest(final Long wfRequestId, final String comment) {
        return new WithdrawWfRequestFluentHelper(servicePath, wfRequestId, comment);
    }

    @Override
    @Nonnull
    public GetWorkflowPendingDataFluentHelper getWorkflowPendingData(final Long wfRequestId) {
        return new GetWorkflowPendingDataFluentHelper(servicePath, wfRequestId);
    }

    @Override
    @Nonnull
    public GetPeopleProfileHeaderFluentHelper getPeopleProfileHeader(final String userId) {
        return new GetPeopleProfileHeaderFluentHelper(servicePath, userId);
    }

    @Override
    @Nonnull
    public SignFormFluentHelper signForm(final Long formDataId, final String comment) {
        return new SignFormFluentHelper(servicePath, formDataId, comment);
    }

    @Override
    @Nonnull
    public RejectFormFluentHelper rejectForm(final Long formDataId, final String comment) {
        return new RejectFormFluentHelper(servicePath, formDataId, comment);
    }

    @Override
    @Nonnull
    public SendToNextStepFluentHelper sendToNextStep(final Long formDataId, final String comment, final String innerStepUserId, final String nextIStepEntryUser) {
        return new SendToNextStepFluentHelper(servicePath, formDataId, comment, innerStepUserId, nextIStepEntryUser);
    }

    @Override
    @Nonnull
    public SendToPreviousStepFluentHelper sendToPreviousStep(final Long formDataId, final String comment, final String previousIStepEntryUser) {
        return new SendToPreviousStepFluentHelper(servicePath, formDataId, comment, previousIStepEntryUser);
    }

    @Override
    @Nonnull
    public CreatePerformanceReviewFormFluentHelper createPerformanceReviewForm(final String formSubjectId, final Long formTemplateId, final Boolean sendEmail, final Boolean enRouteCopy) {
        return new CreatePerformanceReviewFormFluentHelper(servicePath, formSubjectId, formTemplateId, sendEmail, enRouteCopy);
    }

    @Override
    @Nonnull
    public GetPositionObjectDataFluentHelper getPositionObjectData(final Long positionId, final String userId) {
        return new GetPositionObjectDataFluentHelper(servicePath, positionId, userId);
    }

    @Override
    @Nonnull
    public GetNewEmploymentEnabledForContingentWorkforceFluentHelper getNewEmploymentEnabledForContingentWorkforce() {
        return new GetNewEmploymentEnabledForContingentWorkforceFluentHelper(servicePath);
    }

    @Override
    @Nonnull
    public GetDefaultDevGoalPlanTemplateIdFluentHelper getDefaultDevGoalPlanTemplateId() {
        return new GetDefaultDevGoalPlanTemplateIdFluentHelper(servicePath);
    }

    @Override
    @Nonnull
    public FwdCandidateToColleagueFluentHelper fwdCandidateToColleague(final Long candidateId, final String referredTo) {
        return new FwdCandidateToColleagueFluentHelper(servicePath, candidateId, referredTo);
    }

    @Override
    @Nonnull
    public SetSmsNotificationPreferenceFluentHelper setSmsNotificationPreference(final Boolean optIn, final Long candidateId, final String isoCountryCode, final String cellPhone) {
        return new SetSmsNotificationPreferenceFluentHelper(servicePath, optIn, candidateId, isoCountryCode, cellPhone);
    }

    @Override
    @Nonnull
    public ReassignJobReqFluentHelper reassignJobReq(final Integer jobReqId, final String hiringManager, final String recruiter, final String coordinator, final String vpOfStaffing, final String secondRecruiter, final String sourcer) {
        return new ReassignJobReqFluentHelper(servicePath, jobReqId, hiringManager, recruiter, coordinator, vpOfStaffing, secondRecruiter, sourcer);
    }

    @Override
    @Nonnull
    public InitiateOnboardingFluentHelper initiateOnboarding(final Long applicationId) {
        return new InitiateOnboardingFluentHelper(servicePath, applicationId);
    }

    @Override
    @Nonnull
    public SendJobReqToPreviousStepFluentHelper sendJobReqToPreviousStep(final Long jobReqId, final String comment) {
        return new SendJobReqToPreviousStepFluentHelper(servicePath, jobReqId, comment);
    }

    @Override
    @Nonnull
    public SendJobReqToNextStepFluentHelper sendJobReqToNextStep(final Long jobReqId, final String comment) {
        return new SendJobReqToNextStepFluentHelper(servicePath, jobReqId, comment);
    }

    @Override
    @Nonnull
    public SendJobReqFormToUserFluentHelper sendJobReqFormToUser(final Long jobReqId, final String userId, final String comment) {
        return new SendJobReqFormToUserFluentHelper(servicePath, jobReqId, userId, comment);
    }

    @Override
    @Nonnull
    public ApproveOrDeclineJobReqFormFluentHelper approveOrDeclineJobReqForm(final Long jobReqId, final String actionType) {
        return new ApproveOrDeclineJobReqFormFluentHelper(servicePath, jobReqId, actionType);
    }

    @Override
    @Nonnull
    public AddModifierToJobReqFluentHelper addModifierToJobReq(final Long jobReqId, final String modifier) {
        return new AddModifierToJobReqFluentHelper(servicePath, jobReqId, modifier);
    }

    @Override
    @Nonnull
    public ApproveOfferFluentHelper approveOffer(final Long applicationId, final String comment) {
        return new ApproveOfferFluentHelper(servicePath, applicationId, comment);
    }

    @Override
    @Nonnull
    public DeclineOfferFluentHelper declineOffer(final Long applicationId, final String comment) {
        return new DeclineOfferFluentHelper(servicePath, applicationId, comment);
    }

    @Override
    @Nonnull
    public SendOfferForApprovalFluentHelper sendOfferForApproval(final Long applicationId) {
        return new SendOfferForApprovalFluentHelper(servicePath, applicationId);
    }

    @Override
    @Nonnull
    public SendMailOfferLetterFluentHelper sendMailOfferLetter(final Long offerLetterId, final String sendMode, final Long bodyTemplateId, final String bodyLocale) {
        return new SendMailOfferLetterFluentHelper(servicePath, offerLetterId, sendMode, bodyTemplateId, bodyLocale);
    }

    @Override
    @Nonnull
    public GetRecruitingTemplateFluentHelper getRecruitingTemplate(final String templateName, final String templateType) {
        return new GetRecruitingTemplateFluentHelper(servicePath, templateName, templateType);
    }

    @Override
    @Nonnull
    public GetOfferLetterTemplateFluentHelper getOfferLetterTemplate(final String templateName, final String templateType) {
        return new GetOfferLetterTemplateFluentHelper(servicePath, templateName, templateType);
    }

    @Override
    @Nonnull
    public RefreshInterviewAssessmentsFluentHelper refreshInterviewAssessments(final Long jobReqIdParam) {
        return new RefreshInterviewAssessmentsFluentHelper(servicePath, jobReqIdParam);
    }

    @Override
    @Nonnull
    public SendEmailToInterviewersFluentHelper sendEmailToInterviewers(final Long applicationId, final String interviewers, final Boolean attachResume, final Boolean attachCoverLetter, final Boolean attachInterviewGuide, final String hiringManagerNote) {
        return new SendEmailToInterviewersFluentHelper(servicePath, applicationId, interviewers, attachResume, attachCoverLetter, attachInterviewGuide, hiringManagerNote);
    }

    @Override
    @Nonnull
    public InviteToApplyFluentHelper inviteToApply(final Long jobReqId, final String candidateIds) {
        return new InviteToApplyFluentHelper(servicePath, jobReqId, candidateIds);
    }

    @Override
    @Nonnull
    public InitiateOnboardingForUserFluentHelper initiateOnboardingForUser() {
        return new InitiateOnboardingForUserFluentHelper(servicePath);
    }

    @Override
    @Nonnull
    public GetDefaultGoalPlanTemplateIdFluentHelper getDefaultGoalPlanTemplateId() {
        return new GetDefaultGoalPlanTemplateIdFluentHelper(servicePath);
    }

    @Override
    @Nonnull
    public GetExtEventMetaDataDefinitionFluentHelper getExtEventMetaDataDefinition(final String event, final String topic) {
        return new GetExtEventMetaDataDefinitionFluentHelper(servicePath, event, topic);
    }

}
