
/*
 * Generated by OData VDM code generator of SAP Cloud SDK in version 3.15.1
 */

package com.sdk.test.vdm.namespaces.sfodataedmx;

import java.util.Map;
import javax.annotation.Nonnull;
import javax.annotation.Nullable;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.collect.Maps;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.sap.cloud.sdk.datamodel.odata.helper.VdmComplex;
import com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.ODataField;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.NoArgsConstructor;
import lombok.ToString;


/**
 * <p>Original complex type name from the Odata EDM: <b>COSocialAccountBean</b></p>
 * 
 */
@Builder
@Data
@NoArgsConstructor
@AllArgsConstructor
@ToString(doNotUseGetters = true, callSuper = true)
@EqualsAndHashCode(doNotUseGetters = true, callSuper = true)
@JsonAdapter(com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.ODataVdmEntityAdapterFactory.class)
public class COSocialAccountBean
    extends VdmComplex<COSocialAccountBean>
{

    /**
     * Constraints: Nullable<p>Original property from the Odata EDM: <b>domain</b></p>
     * 
     * @param domain
     *     
     */
    @SerializedName("domain")
    @JsonProperty("domain")
    @Nullable
    @ODataField(odataName = "domain")
    private String domain;
    /**
     * Constraints: Nullable<p>Original property from the Odata EDM: <b>instantMessagingId</b></p>
     * 
     * @param instantMessagingId
     *     
     */
    @SerializedName("instantMessagingId")
    @JsonProperty("instantMessagingId")
    @Nullable
    @ODataField(odataName = "instantMessagingId")
    private String instantMessagingId;
    /**
     * Constraints: Nullable<p>Original property from the Odata EDM: <b>url</b></p>
     * 
     * @param url
     *     
     */
    @SerializedName("url")
    @JsonProperty("url")
    @Nullable
    @ODataField(odataName = "url")
    private String url;

    /**
     * {@inheritDoc}
     * 
     */
    @Nonnull
    @Override
    public Class<COSocialAccountBean> getType() {
        return COSocialAccountBean.class;
    }

    @Nonnull
    @Override
    protected Map<String, Object> toMapOfFields() {
        final Map<String, Object> values = super.toMapOfFields();
        values.put("domain", getDomain());
        values.put("instantMessagingId", getInstantMessagingId());
        values.put("url", getUrl());
        return values;
    }

    @Override
    protected void fromMap(final Map<String, Object> inputValues) {
        final Map<String, Object> values = Maps.newHashMap(inputValues);
        // simple properties
        {
            if (values.containsKey("domain")) {
                final Object value = values.remove("domain");
                if ((value == null)||(!value.equals(getDomain()))) {
                    setDomain(((String) value));
                }
            }
            if (values.containsKey("instantMessagingId")) {
                final Object value = values.remove("instantMessagingId");
                if ((value == null)||(!value.equals(getInstantMessagingId()))) {
                    setInstantMessagingId(((String) value));
                }
            }
            if (values.containsKey("url")) {
                final Object value = values.remove("url");
                if ((value == null)||(!value.equals(getUrl()))) {
                    setUrl(((String) value));
                }
            }
        }
        // structured properties
        {
        }
        // navigation properties
        {
        }
        super.fromMap(values);
    }

    @Nonnull
    @Override
    protected Map<String, Object> getKey() {
        final Map<String, Object> result = Maps.newHashMap();
        return result;
    }

}
